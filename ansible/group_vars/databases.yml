---
# Database server specific variables (mainly for RDS monitoring and client tools)

# Database client configuration
db_client_packages:
  - postgresql-client-15
  - mysql-client
  - python3-psycopg2
  - python3-pymysql
  - python3-boto3
  - python3-requests
  - redis-tools

# Database connection configuration
db_connection:
  host: "{{ hostvars['database']['ansible_host'] | default('localhost') }}"
  port: "{{ hostvars['database']['db_port'] | default(5432) }}"
  name: "{{ hostvars['database']['db_name'] | default('appdb') }}"
  engine: "{{ hostvars['database']['db_engine'] | default('postgres') }}"
  ssl_mode: "require"
  connect_timeout: 30
  read_timeout: 60

# Monitoring configuration
enable_db_monitoring: true
enable_performance_reports: true
monitoring_interval: 300  # 5 minutes
connection_test_interval: 300  # 5 minutes
metrics_collection_interval: 600  # 10 minutes

# PostgreSQL specific monitoring
postgres_monitoring:
  slow_query_threshold: 1000  # milliseconds
  connection_limit_threshold: 80  # percentage
  enable_pg_stat_statements: true
  log_min_duration_statement: 1000
  log_connections: true
  log_disconnections: true

# MySQL specific monitoring (if applicable)
mysql_monitoring:
  slow_query_log: true
  long_query_time: 2
  log_queries_not_using_indexes: true
  connection_limit_threshold: 80

# Backup monitoring and verification
backup_monitoring:
  enable_backup_verification: true
  backup_test_frequency: "daily"
  backup_retention_check: true
  backup_size_monitoring: true

# Performance monitoring queries
performance_queries:
  postgres:
    - name: "slow_queries"
      query: |
        SELECT query, calls, total_time, mean_time, rows 
        FROM pg_stat_statements 
        WHERE mean_time > {{ postgres_monitoring.slow_query_threshold }} 
        ORDER BY mean_time DESC 
        LIMIT 10;
    - name: "database_size"
      query: |
        SELECT datname, pg_size_pretty(pg_database_size(datname)) as size 
        FROM pg_database 
        WHERE datistemplate = false;
    - name: "active_connections"
      query: |
        SELECT count(*) as active_connections 
        FROM pg_stat_activity 
        WHERE state = 'active';
    - name: "table_sizes"
      query: |
        SELECT schemaname, tablename, 
               pg_size_pretty(pg_total_relation_size(schemaname||'.'||tablename)) as size
        FROM pg_tables 
        WHERE schemaname NOT IN ('information_schema', 'pg_catalog')
        ORDER BY pg_total_relation_size(schemaname||'.'||tablename) DESC 
        LIMIT 10;

  mysql:
    - name: "slow_queries"
      query: |
        SELECT query_time, sql_text 
        FROM mysql.slow_log 
        ORDER BY query_time DESC 
        LIMIT 10;
    - name: "database_size"
      query: |
        SELECT table_schema as 'Database', 
               ROUND(SUM(data_length + index_length) / 1024 / 1024, 2) as 'Size (MB)' 
        FROM information_schema.tables 
        GROUP BY table_schema;

# CloudWatch custom metrics
cloudwatch_custom_metrics:
  - name: "DatabaseConnections"
    unit: "Count"
    query: "SELECT count(*) FROM pg_stat_activity;"
  - name: "SlowQueries"
    unit: "Count"
    query: "SELECT count(*) FROM pg_stat_statements WHERE mean_time > 1000;"
  - name: "DatabaseSize"
    unit: "Bytes"
    query: "SELECT pg_database_size('{{ db_connection.name }}');"

# Alerting thresholds
alert_thresholds:
  connection_count_percent: 80
  cpu_utilization_percent: 80
  memory_utilization_percent: 85
  disk_usage_percent: 85
  slow_query_threshold_ms: 5000
  replication_lag_seconds: 300
  backup_age_hours: 25

# Database maintenance
maintenance_config:
  enable_auto_vacuum: true
  vacuum_schedule: "0 1 * * 0"  # Weekly on Sunday at 1 AM
  analyze_schedule: "0 0 * * *"  # Daily at midnight
  reindex_schedule: "0 2 1 * *"  # Monthly on 1st at 2 AM
  log_cleanup_schedule: "0 3 * * *"  # Daily at 3 AM

# Backup configuration
backup_config:
  enable_logical_backups: false  # RDS handles this
  backup_verification_schedule: "0 6 * * *"  # Daily at 6 AM
  backup_retention_days: 30
  backup_encryption: true

# Security configuration
db_security:
  enable_ssl: true
  ssl_cert_verification: true
  allowed_cipher_suites:
    - "TLS_RSA_WITH_AES_256_GCM_SHA384"
    - "TLS_RSA_WITH_AES_128_GCM_SHA256"
  connection_encryption: "required"

# Tools and utilities
db_tools:
  - name: "pgbench"
    package: "postgresql-contrib"
    engine: "postgres"
  - name: "mysqltuner"
    package: "mysqltuner"
    engine: "mysql"
  - name: "pt-query-digest"
    package: "percona-toolkit"
    engine: "mysql"

# Log configuration
db_log_config:
  log_retention_days: 30
  log_rotation: true
  log_compression: true
  syslog_facility: "local0"
  log_destination: "syslog"

# Connection pooling (for application servers)
connection_pool:
  min_connections: 2
  max_connections: 20
  idle_timeout: 30000
  connection_timeout: 5000
  statement_timeout: 60000
